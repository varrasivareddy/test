# coding=utf-8
"""===========================================================================
DESCRIPTION:  Generated for GEN_EMPLOYEE

AUTHOR:       Generated by DA AutoGen (PIMCO\johntran)

DATE:         Mar 19 2018  1:22PM

!!! DO NOT MODIFY THIS FILE !!! 

To override/extend the class in this file, you'll have to do the following:
   * Create a folder called 'overrides'
   * Create a file with the same name as this file
   * The new file should contain a class with the same name as the of the class you want to override/extend
===========================================================================
"""

from __future__ import unicode_literals
from datetime import datetime
from django.db import models as md

from ..app_config import AppConfig
from helpers.gen_employee import ModelFieldHelper
import model_base


class GenEmployee(model_base.ModelBase):

    id = ModelFieldHelper().id()
    mgr_employee_id = ModelFieldHelper().mgr_employee_id()
    dept_id = ModelFieldHelper().dept_id()
    employee_id_number = ModelFieldHelper().employee_id_number()
    name = ModelFieldHelper().name()
    dob = ModelFieldHelper().dob()
    email = ModelFieldHelper().email()
    phone = ModelFieldHelper().phone()
    note = ModelFieldHelper().note()
    start_date = ModelFieldHelper().start_date()
    row_insert_by = ModelFieldHelper().row_insert_by()
    row_insert_date = ModelFieldHelper().row_insert_date()
    row_update_by = ModelFieldHelper().row_update_by()
    row_update_date = ModelFieldHelper().row_update_date()

    # help_texts = {'field_name': 'Help text for field'}
    # verbose_names = {'field_name': 'Displayed name for field'}

    def get_unicode(self):
        return unicode(self.id) + ' - ' + unicode(self.employee_id_number)

    def log_insert(self, by):
        self.row_insert_by = by
        self.row_insert_date = datetime.now()
        self.log_update(by)

    def log_update(self, by):
        self.row_update_by = by
        self.row_update_date = datetime.now()

    class Meta:
        abstract = False
        app_label = AppConfig.name
        db_table = '"DE_OWN"."GEN_EMPLOYEE"'
        index_together = ()
        #indexes = []
        permissions = (('read_genemployee', 'Can read Gen Employee'),)
        required_db_vendor = 'Oracle'
        unique_together = ()
        verbose_name = 'Gen Employee'
        verbose_name_plural = 'Gen Employee'

    # def get_queryset(self, request):
    #     q = super(GenEmployee, self).get_queryset(request)
    #     list_display = request.GET.get('list_view', list_display)
    #     q._me
    #     return q
